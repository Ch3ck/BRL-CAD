Index: include/ged.h
===================================================================
--- include/ged.h	(revision 57103)
+++ include/ged.h	(working copy)
@@ -1614,6 +1614,11 @@
 GED_EXPORT extern int ged_ptranslate(struct ged *gedp, int argc, const char *argv[]);
 
 /**
+ *Pull objects' path transformations from primitives
+ */
+GED_EXPORT extern int ged_pull(struct ged *gedp, int argc, const char *argv[]);
+
+/**
  * Push objects' path transformations to primitives
  */
 GED_EXPORT extern int ged_push(struct ged *gedp, int argc, const char *argv[]);
Index: src/libged/pull.c
===================================================================
--- src/libged/pull.c	(revision 0)
+++ src/libged/pull.c	(revision 0)
@@ -0,0 +1,71 @@
+/*                         P U L L . C
+ * BRL-CAD
+ *
+ * Copyright (c) 2013 United States Government as represented by
+ * the U.S. Army Research Laboratory.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public License
+ * version 2.1 as published by the Free Software Foundation.
+ *
+ * This library is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this file; see the file named COPYING for more
+ * information.
+ */
+/** @file libged/push.c
+ * The pull command.
+ * This is the Pull command which pulls the matrix transformations of an object
+ * up the CSG Tree.
+ */
+
+
+#include "common.h"
+
+#include <stdlib.h>
+#include <string.h>
+#include "bio.h"
+
+#include "bu.h"
+#include "bn.h"
+#include "cmd.h"
+
+#include "./ged_private.h"
+
+
+int
+ged_pull(struct ged *gedp, int argc, const char *argv[])
+{
+    static const char *usage = "object";
+
+    GED_CHECK_DATABASE_OPEN(gedp, GED_ERROR);
+    GED_CHECK_READ_ONLY(gedp, GED_ERROR);
+    GED_CHECK_ARGC_GT_0(gedp, argc, GED_ERROR);
+
+    /* initialize result */
+    bu_vls_trunc(gedp->ged_result_str, 0);
+
+    /* must be wanting help */
+    if (argc == 1) {
+	bu_vls_printf(gedp->ged_result_str, "Usage: %s %s", argv[0], usage);
+	return GED_HELP;
+    }
+
+    return GED_OK;
+}
+
+
+/** @} */
+/*
+ * Local Variables:
+ * mode: C
+ * tab-width: 8
+ * indent-tabs-mode: t
+ * c-file-style: "stroustrup"
+ * End:
+ * ex: shiftwidth=4 tabstop=8
+ */
Index: src/libged/CMakeLists.txt
===================================================================
--- src/libged/CMakeLists.txt	(revision 57103)
+++ src/libged/CMakeLists.txt	(working copy)
@@ -189,6 +189,7 @@
   pscale.c
   pset.c
   ptranslate.c
+  pull.c
   push.c
   put.c
   put_comb.c
Index: src/mged/setup.c
===================================================================
--- src/mged/setup.c	(revision 57103)
+++ src/mged/setup.c	(working copy)
@@ -262,6 +262,7 @@
     {"press", f_press, GED_FUNC_PTR_NULL},
     {"preview", cmd_ged_dm_wrapper, ged_preview},
     {"ps", f_ps, GED_FUNC_PTR_NULL},
+    {"pull", cmd_ged_plain_wrapper, ged_pull},
     {"push", cmd_ged_plain_wrapper, ged_push},
     {"put", cmd_ged_plain_wrapper, ged_put},
     {"put_comb", cmd_ged_plain_wrapper, ged_put_comb},
